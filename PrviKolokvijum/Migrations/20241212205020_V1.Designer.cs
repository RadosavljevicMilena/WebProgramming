// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTemplate.Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    [Migration("20241212205020_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTemplate.Models.Akvarijum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumPoslednjegCiscenja")
                        .HasColumnType("datetime2");

                    b.Property<int>("FrekvencijaCiscenja")
                        .HasColumnType("int");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.Property<double>("Zapremina")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Akvarijumi");
                });

            modelBuilder.Entity("WebTemplate.Models.Dodavanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AkvarijumID")
                        .HasColumnType("int");

                    b.Property<int>("BrojJedinkiTeVrste")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RibaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AkvarijumID");

                    b.HasIndex("RibaID");

                    b.ToTable("Dodavanja");
                });

            modelBuilder.Entity("WebTemplate.Models.Riba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GodineStarosti")
                        .HasColumnType("int");

                    b.Property<double>("Masa")
                        .HasColumnType("float");

                    b.Property<string>("NazivVrste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ribe");
                });

            modelBuilder.Entity("WebTemplate.Models.Dodavanje", b =>
                {
                    b.HasOne("WebTemplate.Models.Akvarijum", "Akvarijum")
                        .WithMany("Dodavanja")
                        .HasForeignKey("AkvarijumID");

                    b.HasOne("WebTemplate.Models.Riba", "Riba")
                        .WithMany("Dodavanja")
                        .HasForeignKey("RibaID");

                    b.Navigation("Akvarijum");

                    b.Navigation("Riba");
                });

            modelBuilder.Entity("WebTemplate.Models.Akvarijum", b =>
                {
                    b.Navigation("Dodavanja");
                });

            modelBuilder.Entity("WebTemplate.Models.Riba", b =>
                {
                    b.Navigation("Dodavanja");
                });
#pragma warning restore 612, 618
        }
    }
}
